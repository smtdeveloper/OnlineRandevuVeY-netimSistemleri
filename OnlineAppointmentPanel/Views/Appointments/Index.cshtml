@using Entities.DTOs.Appointment
@model AppointmentsViewModel

@{
    ViewData["Title"] = "Randevu Listesi";
}

<h1 class="text-center my-4">Randevu Listesi</h1>
@if (Model.IsCustomer)
{
    <div class="d-flex justify-content-end mb-3">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAppointmentModal">
            Yeni Randevu Al
        </button>
    </div>
}
<div class="card">
  
    <div class="card-body">
      

        <table id="appointmentTable" class="table table-hover" style="width:100%">
            <thead class="table-primary">
                <tr>
                    @if (Model.IsAdmin)
                    {
                        <th>Kullanıcı Adı</th>
                    }
                    <th>Hizmet Adı</th>
                    <th class ="text-start">Randevu Tarihi</th>
                    <th>Durum</th>
                    <th class="text-end">İşlemler</th>
                </tr>
            </thead>
            <tbody id="appointmentList">
                @if (Model.Appointments.Any())
                {
                    @foreach (var appointment in Model.Appointments)
                    {
                        <tr id="appointment-row-@appointment.Id">
                            @if (Model.IsAdmin)
                            {
                                <td>@appointment.UserName</td>
                            }
                            <td>@appointment.ServiceName</td>
                            <td class="text-start">@appointment.AppointmentDate.ToString("yyyy-MM-dd HH:mm")</td>
                            <td class="status-cell" data-status="@appointment.Status.ToString()"></td>
                            <td class="text-end">
                                <a href="@Url.Action("Detail", "Appointments", new { id = appointment.Id })" class="btn btn-info btn-sm">Detay</a>
                                @if (Model.IsCustomer)
                                {
                                    <a href="javascript:void(0)" onclick="openUpdateModal('@appointment.Id')" class="btn btn-warning btn-sm">Güncelle</a>
                                }
                                @if (Model.IsAdmin)
                                {
                                    <a href="javascript:void(0)" onclick="openStatusUpdateModal('@appointment.Id')" class="btn btn-warning btn-sm">Durum Güncelle</a>
                                }
                                <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete('@appointment.Id')">Sil</button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="text-center">Randevu bulunamadı.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="addAppointmentModal" tabindex="-1" aria-labelledby="addAppointmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addAppointmentModalLabel">Yeni Randevu Ekle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body">
                <form id="appointmentForm">
                    <div class="mb-3">
                        <label for="serviceId" class="form-label">Hizmet Seçin</label>
                        <select id="serviceId" name="ServiceId" class="form-select" required></select>
                    </div>
                    <div class="mb-3">
                        <label for="appointmentDate" class="form-label">Randevu Tarihi</label>
                        <input type="datetime-local" id="appointmentDate" name="AppointmentDate" class="form-control" required />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" id="createAppointmentBtn" class="btn btn-primary">Ekle</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="updateAppointmentModal" tabindex="-1" aria-labelledby="updateAppointmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateAppointmentModalLabel">Randevu Güncelle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body">
                <form id="updateAppointmentForm">
                    <input type="hidden" id="updateAppointmentId" name="Id" />
                    <div class="mb-3">
                        <label for="updateServiceId" class="form-label">Hizmet Seçin</label>
                        <select id="updateServiceId" name="ServiceId" class="form-select" required></select>
                    </div>
                    <div class="mb-3">
                        <label for="updateAppointmentDate" class="form-label">Randevu Tarihi</label>
                        <input type="datetime-local" id="updateAppointmentDate" name="AppointmentDate" class="form-control" required />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" id="updateAppointmentBtn" class="btn btn-primary">Güncelle</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="statusUpdateModal" tabindex="-1" aria-labelledby="statusUpdateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="statusUpdateModalLabel">Durum Güncelle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body">
                <form id="statusUpdateForm">
                    <input type="hidden" id="statusUpdateAppointmentId" name="Id" />
                    <div class="mb-3">
                        <label for="statusSelect" class="form-label">Durum Seçin</label>
                        <select id="statusSelect" name="Status" class="form-select" required>
                            <option value="">Durum Seçin</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" id="updateStatusBtn" class="btn btn-primary">Durumu Güncelle</button>
            </div>
        </div>
    </div>
</div>

@if (!Model.Appointments.Any())
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                icon: "info",
                title: "Bilgi",
                text: "Henüz bir randevu bulunmamaktadır.",
                confirmButtonText: "Tamam"
            });
        });
    </script>
}
@section Scripts { 

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.7.1.js"></script>
<script src="https://cdn.datatables.net/2.1.8/js/dataTables.js"></script>
<script src="https://cdn.datatables.net/2.1.8/js/dataTables.bootstrap5.js"></script>

<script>

      new DataTable('#appointmentTable', {
            language: {
                url: '//cdn.datatables.net/plug-ins/2.1.8/i18n/tr.json',
                },
            });

    $(document).ready(function () {
        
        const statusTranslations = {
            "Pending": "Beklemede",
            "Approved": "Onaylandı",
            "Canceled": "İptal Edildi",
            "Completed": "Tamamlandı"
        };


        $(".status-cell").each(function () {
            const status = $(this).data("status");
            const translatedStatus = statusTranslations[status] || status;
            $(this).text(translatedStatus);
        });


        function loadStatusOptions() {
            $.ajax({
                url: "/Appointments/GetStatuses",
                type: "GET",
                success: function (response) {
                    if (response.success) {
                        const statusDropdown = $("#statusSelect");
                        statusDropdown.empty();
                        statusDropdown.append(new Option("Durum Seçin", ""));

                        response.statuses
                            .filter(status => status.name !== "Bilinmiyor")
                            .forEach(status => {
                                const translatedName = statusTranslations[status.name] || status.name;
                                statusDropdown.append(new Option(translatedName, status.id));
                            });
                    } else {
                        Swal.fire("Hata", response.errorMessage, "error");
                    }
                },
                error: function () {
                    Swal.fire("Hata", "Durum seçenekleri yüklenemedi.", "error");
                }
            });
        }


        window.openStatusUpdateModal = function (id) {
            $("#statusUpdateAppointmentId").val(id);
            loadStatusOptions();
            $("#statusUpdateModal").modal("show");
        };


        $("#updateStatusBtn").click(function () {
            const data = {
                Id: $("#statusUpdateAppointmentId").val(),
                Status: $("#statusSelect").val()
            };

            if (!data.Status) {
                Swal.fire("Hata", "Lütfen bir durum seçin.", "error");
                return;
            }

            $.ajax({
                url: "/Appointments/UpdateStatus",
                type: "POST",
                data: data,
                beforeSend: function () {
                    Swal.fire({
                        title: "Güncelleniyor...",
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });
                },
                success: function (response) {
                    Swal.close();
                    if (response.success) {
                        Swal.fire({
                            icon: "success",
                            title: "Başarılı",
                            text: response.message,
                            showConfirmButton: true
                        }).then(() => {

                            const translatedStatus = statusTranslations[response.appointment.status] || response.appointment.status;
                            $(`#appointment-row-${response.appointment.id} .status-cell`).text(translatedStatus);

                            $("#statusUpdateModal").modal("hide");
                        });
                    } else {
                        Swal.fire("Hata", response.errorMessage, "error");
                    }
                },
                error: function () {
                    Swal.fire("Hata", "Durum güncellenemedi.", "error");
                }
            });
        });

        function loadServices() {
            $.ajax({
                url: "/Appointments/GetServices",
                type: "GET",
                success: function (response) {
                    if (response.success) {
                        const serviceDropdown = $("#serviceId");
                        serviceDropdown.empty();
                        serviceDropdown.append(new Option("Lütfen bir hizmet seçin", ""));
                        response.services.forEach(service => {
                            serviceDropdown.append(new Option(service.name, service.id));
                        });
                    } else {
                        Swal.fire("Hata", response.errorMessage, "error");
                    }
                },
                error: function () {
                    Swal.fire("Hata", "Hizmetler yüklenemedi.", "error");
                }
            });
        }

        
        $("#addAppointmentModal").on("show.bs.modal", function () {
            loadServices();
        });

        
        $("#createAppointmentBtn").click(function () {
            const data = {
                ServiceId: $("#serviceId").val(),
                AppointmentDate: $("#appointmentDate").val()
            };

            if (!data.ServiceId || !data.AppointmentDate) {
                Swal.fire("Hata", "Lütfen tüm alanları doldurunuz.", "error");
                return;
            }

            $.ajax({
                url: "/Appointments/Create",
                type: "POST",
                data: data,
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: "success",
                            title: "Başarılı",
                            text: response.message,
                            showConfirmButton: true
                        }).then(() => {
                            const translatedStatus = statusTranslations[response.appointment.status] || response.appointment.status;
                            const newRow = `
                                <tr id="appointment-row-${response.appointment.id}">
                                    
                                    <td>${response.appointment.serviceName || "Bilinmiyor"}</td>
                                    <td>${response.appointment.appointmentDate || "Tarih yok"}</td>
                                    <td class="status-cell" data-status="${response.appointment.status}">${translatedStatus}</td>
                                        <td class="text-end" >
                                        <a href="/Appointments/Detail/${response.appointment.id}" class="btn btn-info btn-sm">Detay</a>
                                        <a href="javascript:void(0)" onclick="openUpdateModal('${response.appointment.id}')" class="btn btn-warning btn-sm">Güncelle</a>
                                        <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete('${response.appointment.id}')">Sil</button>
                                    </td>
                                </tr>`;

                            $("#appointmentList").append(newRow);

                            $("#addAppointmentModal").modal("hide");
                            $("#appointmentForm")[0].reset();
                        });
                    } else {
                        Swal.fire("Hata", response.errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    Swal.fire("Hata", "Randevu oluşturulamadı.", "error");
                }
            });
        });

        
        window.openUpdateModal = function (id) {
            $("#updateAppointmentId").val("");
            $("#updateServiceId").empty();
            $("#updateAppointmentDate").val("");

            $.ajax({
                url: `/Appointments/GetById/${id}`,
                type: "GET",
                beforeSend: function () {
                    Swal.fire({ title: "Yükleniyor...", allowOutsideClick: false, showConfirmButton: false });
                },
                success: function (response) {
                    Swal.close();
                    if (response.success) {
                        const data = response.data;

                        $("#updateAppointmentId").val(data.id);
                        $("#updateAppointmentDate").val(data.appointmentDate);

                        $.ajax({
                            url: "/Appointments/GetServices",
                            type: "GET",
                            success: function (res) {
                                if (res.success) {
                                    const serviceDropdown = $("#updateServiceId");
                                    serviceDropdown.empty();
                                    res.services.forEach(service => {
                                        const option = new Option(service.name, service.id);
                                        serviceDropdown.append(option);
                                    });
                                    $("#updateServiceId").val(data.serviceId);
                                    $("#updateAppointmentModal").modal("show");
                                }
                            },
                            error: function () {
                                Swal.fire("Hata", "Hizmet listesi yüklenemedi.", "error");
                            }
                        });
                    } else {
                        Swal.fire("Hata", response.errorMessage, "error");
                    }
                },
                error: function () {
                    Swal.fire("Hata", "Randevu bilgileri alınamadı.", "error");
                }
            });
        };

        
        $("#updateAppointmentBtn").click(function () {
            const data = {
                Id: $("#updateAppointmentId").val(),
                ServiceId: $("#updateServiceId").val(),
                AppointmentDate: $("#updateAppointmentDate").val()
            };

            $.ajax({
                url: "/Appointments/Update",
                type: "POST",
                data: data,
                beforeSend: function () {
                    Swal.fire({ title: "Güncelleniyor...", allowOutsideClick: false, showConfirmButton: false });
                },
                success: function (response) {
                    Swal.close();
                    if (response.success) {
                        Swal.fire({
                            icon: "success",
                            title: "Başarılı",
                            text: response.message,
                            showConfirmButton: true
                        }).then(() => {
                            $(`#appointment-row-${response.appointment.id}`).html(`
                                
                                <td>${response.appointment.serviceName}</td>
                                <td>${response.appointment.appointmentDate}</td>
                                <td>${response.appointment.status}</td>
                                    <td class="text-end">
                                    <a href="/Appointments/Detail/${response.appointment.id}" class="btn btn-info btn-sm">Detay</a>
                                    <a href="javascript:void(0)" onclick="openUpdateModal('${response.appointment.id}')" class="btn btn-warning btn-sm">Güncelle</a>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete('${response.appointment.id}')">Sil</button>
                                </td>`);

                            $("#updateAppointmentModal").modal("hide");
                        });
                    } else {
                        Swal.fire("Hata", response.errorMessage, "error");
                    }
                },
                error: function () {
                    Swal.fire("Hata", "Randevu güncellenemedi.", "error");
                }
            });
        });

        
        window.confirmDelete = function (id) {
            Swal.fire({
                title: 'Silmek istediğinize emin misiniz?',
                text: "Bu işlemi geri alamazsınız!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Evet, sil!',
                cancelButtonText: 'İptal'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/Appointments/Delete",
                        type: "POST",
                        data: { id: id },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire('Silindi!', response.message, 'success').then(() => {
                                    $(`#appointment-row-${id}`).remove();
                                });
                            } else {
                                Swal.fire('Hata!', response.errorMessage, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Hata!', 'Bir hata oluştu. Lütfen tekrar deneyin.', 'error');
                        }
                    });
                }
            });
        };
    });
</script>
}