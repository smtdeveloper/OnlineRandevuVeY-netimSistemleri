@model List<Entities.DTOs.Auth.UserDto>

@{
    ViewData["Title"] = "Kullanıcı Yönetimi";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>@ViewData["Title"]</h2>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-person-plus-fill"></i> Yeni Kullanıcı Ekle
        </a>
    </div>

    <table id="userTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Kullanıcı Adı</th>
                <th>Roller</th>
                <th>Oluşturulma Tarihi</th>
                <th>İşlemler</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var user in Model)
                {
                    <tr id="user-row-@user.Id">
                        <td>@user.UserName</td>
                        <td>
                            @if (user.Roles != null && user.Roles.Any())
                            {
                                @string.Join(", ", user.Roles.Select(role => role.ToString()))
                            }
                            else
                            {
                                <span>Rol Yok</span>
                            }
                        </td>
                        <td>@user.CreatedDate.ToString("yyyy-MM-dd")</td>
                        <td>
                            <div class="d-flex justify-content-center">
                                <a asp-action="Detail" asp-route-id="@user.Id" class="btn btn-info btn-sm me-2">
                                    <i class="bi bi-eye"></i> Detay
                                </a>
                                <a asp-action="AssignRole" asp-route-id="@user.Id" class="btn btn-secondary btn-sm me-2">
                                    <i class="bi bi-person-badge"></i> Rol Ata
                                </a>
                                <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete('@user.Id')">
                                    <i class="bi bi-trash"></i> Sil
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            $('#userTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.11.5/i18n/Turkish.json'
                }
            });
        });

        function confirmDelete(userId) {
            console.log(userId);
            Swal.fire({
                title: 'Silmek istediğinize emin misiniz?',
                text: "Bu işlemi geri alamazsınız!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Evet, sil!',
                cancelButtonText: 'İptal'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/Users/Delete/${userId}`, // Route'daki {id} yerine userId'yi yerleştiriyoruz
                        type: 'Delete',
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Başarılı!',
                                    text: response.message,
                                    confirmButtonText: 'Tamam'
                                }).then(() => {
                                    $(`#user-row-${userId}`).remove(); // DOM'dan kullanıcı satırını kaldır
                                    $('#userTable').DataTable().row(`#user-row-${userId}`).remove().draw(); // DataTable'dan güncelle
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Hata!',
                                    text: response.errorMessage,
                                    confirmButtonText: 'Tamam'
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Hata!',
                                text: 'Silme işlemi sırasında bir hata oluştu.',
                                confirmButtonText: 'Tamam'
                            });
                        }
                    });
                }
            });
        }
    </script>

}
