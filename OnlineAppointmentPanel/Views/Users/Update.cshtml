@model Entities.DTOs.Auth.UpdateUserRequest

@{
    ViewData["Title"] = "Kullanıcı Güncelle";
}

<h2 class="text-center my-4">@ViewData["Title"]</h2>

<div class="card shadow-sm">
    <div class="card-header bg-primary text-white">
        <h5 class="mb-0"><i class="bi bi-pencil-square"></i> Kullanıcı Güncelleme Formu</h5>
    </div>
    <div class="card-body">
        <form asp-action="Update" method="post">
            <input type="hidden" asp-for="Id" />

            <div class="mb-3">
                <label asp-for="UserName" class="form-label">Kullanıcı Adı</label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>

            

            <div class="mb-3">
                <label asp-for="Password" class="form-label">Yeni Şifre</label>
                <input asp-for="Password" type="password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save"></i> Güncelle
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-x-circle"></i> İptal
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            $("form").on("submit", function (e) {
                Swal.fire({
                    title: "Güncelleniyor...",
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    didOpen: () => Swal.showLoading()
                });
            });
        });
    </script>
}
